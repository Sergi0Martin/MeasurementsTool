name: dev-pipeline

# https://docs.github.com/es/actions/deployment/about-deployments/deploying-with-github-actions#using-concurrency
concurrency: 
  group: dev-concurrency
  cancel-in-progress: false

on:
  push:
    branches: 
      - '*'         # matches every branch that doesn't contain a '/'
      # - '*/*'       # matches every branch containing a single '/'
      # - '**'        # matches every branch
      - '!master'   # excludes master

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore MeasurementsTool.sln
    - name: Build
      run: dotnet build --configuration Release --no-restore MeasurementsTool.sln
    - uses: actions/upload-artifact@v2
      with:
        name: solution-build
        path: .

  run-tests:
    name: Run tests
    runs-on: ubuntu-latest
    needs: [build]
    steps:
    - uses: actions/download-artifact@v2
      with:
        name: solution-build
        path: .
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
    - name: Test
      run: dotnet test --no-build --collect:"XPlat Code Coverage" --results-directory:./CoverageResults/ MeasurementsTool.sln
    - name: Console Command list files
      run: |
        ls -R
        echo MOVER COVERAGE RESULTS
        cp CoverageResults/*/*.xml CoverageResults/
    - name: Codecov
      uses: codecov/codecov-action@v3.1.0
      with:
        name: codecov-umbrella
        files: CoverageResults/coverage.cobertura.xml
        flags: unittests
        verbose: true

  # publish-code-coverage:
  #   name: Publish coverage on Codecov
  #   runs-on: ubuntu-latest
  #   needs: [build, run-tests]
  #   steps:
  #   - uses: actions/download-artifact@v2
  #     with:
  #       name: solution-build
  #       path: .
  #   - name: Add GitHub package source  
  #     run: dotnet nuget add source --username Sergi0Martin --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name MeasurementsTool "https://nuget.pkg.github.com/Sergi0Martin/index.json" 
  #   - name: Publish on GitHub Packages
  #     run: dotnet nuget push MeasurementsTool/bin/Release/*.nupkg --api-key ${{ secrets.PUBLISHING_PACKAGES_PAT }} --source "MeasurementsTool"