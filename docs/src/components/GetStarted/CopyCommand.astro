<section class="mt-8 mb-10 md:mb-28">
    <div class="flex flex-row justify-center text-center">
       <div class="bg-gradient mt-5 p-0.5">
          <div class="flex items-center code-background">
             <svg width="22" height="13" viewBox="0 0 22 13" fill="none" xmlns="http://www.w3.org/2000/svg" 
                class="relative ml-4 mr-2 block w-3 -rotate-90">
                <path d="M1 1L11 11L21 1" stroke="currentColor" stroke-width="2"></path>
             </svg>
            
             <code id="copy-data" class="code flex-1 text-left leading-none dark:text-maize">
                dotnet add package MeasurementsTool
             </code>
             <div>
                <button id="copy-button" class="block p-4 transition hover:scale-110 active:scale-100 active:transition-none"
                   title="Copy to clipboard">
                   <svg class="w-5"
                      viewBox="0 0 24 24"
                      fill="none"
                      stroke="currentColor"
                      stroke-width="2"
                      stroke-linecap="round"
                      stroke-linejoin="round">
                      <rect x="9" y="9" width="13" height="13" rx="2" ry="2"></rect>
                      <path d="M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"></path>
                   </svg>
                </button>
                <!-- <p id="copied-tooltip" class="absolute whitespace-nowrap bg-black/50 p-2 text-sm">
                   Copied!
                </p> -->
             </div>
          </div>
       </div>
    </div>
 </section>
 
 <script>
    let copyButton = document.getElementById("copy-button");
    copyButton!.addEventListener("click", async () => {
       await copyCode();
    });
 
    function copyCode() {
       let copyText = document.getElementById("copy-data");
       let tooltip = document.getElementById("copied-tooltip");
       
       navigator.clipboard.writeText(copyText!.innerText);
       tooltip!.classList.remove("opacity-0");
 
       setTimeout(() => {
          tooltip!.classList.add("opacity-0");
       },  3500);
    }
 </script>
 
 <style>
    .bg-gradient {
       position: relative;
       overflow: hidden;
       background-color: transparent;
       transform: rotate(3deg);
    }
 
    .bg-gradient:after {
       content: '';
       display: block;
       z-index: -1;
       position: absolute;
       top: -20rem; right: -5rem; bottom: -20rem; left: -5rem;
       background-image: linear-gradient(45deg, #36acc3 45%, #ffe74c 55%);
       animation: rotate-gradient linear 2s infinite;
    }
 
    @keyframes rotate-gradient {
       to { transform: rotate(360deg) }
    }
 
    .code-background{
       @apply bg-oxford_blue-200 dark:text-maize-500;
    }
 </style>